Choose Entry Point
    > Function Entry "transport_handler" (segment1+0x400c)


segment1+0x4114 [ via: "transport_handler" (segment1+0x400c) ]
    ...
    Return (original) vs. Call to: segment1+0x3dd24 Returns to: "transport_handler" (segment1+0x3dd44) (patched)
        ...
            ...
            > Choose desynchronization points

            Choose a desynchronization point:
                > segment1+0x4120 (original)
                > segment1+0x4120 (patched)


segment1+0x4120 [ via: "transport_handler" (segment1+0x400c) ]
    ...
    Return (original) vs. Call to: segment1+0x3dd24 Returns to: "transport_handler" (segment1+0x3dd44) (patched)
        ...
            ...
            > Choose synchronization points

            Choose a synchronization point:
                > segment1+0x412a (patched)
                > segment1+0x412a (original)
                > segment1+0x41b0 (original)
                > segment1+0x41b0 (patched)
                > Finish Choosing

segment1+0x412a [ via: "transport_handler" (segment1+0x400c) ]
    Modify Proof Node
    Add Assertion
        > 0: Assert condition

segment1+0x412a [ via: "transport_handler" (segment1+0x400c) ]
    Include Location:
        > Include All Registers

segment1+0x412a (original) vs. segment1+0x41b0 (patched)
    ...
    ...
    ...
    ...
    > Align control flow in equivalence condition

segment1+0x41b0 (original) vs. segment1+0x412a (patched)
    ...
    ...
    ...
    ...
    > Align control flow in equivalence condition


Verification Finished
Continue verification?
    > Finish and view final result